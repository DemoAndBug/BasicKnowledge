package com.simon.java.design.principles;

/**
 * 里式替换原则
 *
 * desc:采用里氏替换原则的目的就是增强程序的健壮性， 版本升级时也可以保持非常好的兼容性。即使增加子类，
 * 原有的子类还可以继续运行。在实际项目中， 每个子类对应不同的业务含义， 使用父类作为参数， 传递不同的子类完成不同的业务逻辑
 * 对于基类中定义的所有子程序，用在它的任何一个派生类中时的含义都应该是相同的。
 * 这样继承才不会增加复杂度，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。
 * 如果我们必须要不断地思考不同派生类的实现在语义上的差异，继承就只会增加复杂度了。
 */
public class Lsp {
}
